{"version":3,"sources":["store/auth/actionTypes.js","store/auth/actionsCreator.js","store/userPosts/actionTypes.js","store/userPosts/actionsCreator.js","config/config.js","components/App/common/Header/Nav.jsx","components/App/common/Header/Header.jsx","components/App/common/Footer/Footer.jsx","store/posts/actionTypes.js","store/posts/actionsCreator.js","store/fetchStatus/actionTypes.js","store/fetchStatus/actionsCreator.js","components/Forms/PostForm.jsx","store/fetcher/postFetcher.js","components/PostComponents/MakePostDiv.jsx","utils/calcTime.js","store/user/actionTypes.js","store/user/actionsCreator.js","store/fetcher/commentFetcher.js","components/Modals/DeleteModal.jsx","store/users/actionTypes.js","store/users/actionsCreator.js","store/errors/actionTypes.js","store/errors/actionsCreator.js","store/fetcher/userFetcher.js","components/App/Discover/UserCard.jsx","components/Modals/Modal.jsx","components/CommentComponents/Comment.jsx","hooks/useForms.js","components/Forms/CommentForm.jsx","components/CommentComponents/CommentsList.jsx","components/Forms/EditFeedForm.jsx","components/PostComponents/Post.jsx","utils/sortByDate.js","components/PostComponents/PostsSection.jsx","components/Loader/Loader.jsx","components/App/Home/Home.jsx","components/App/UserProfile/UserProfile.jsx","components/App/Discover/FoundPeopleList.jsx","components/App/Discover/Discover.jsx","components/Forms/EditUserInfoForm.jsx","components/Forms/ChangePasswordForm.jsx","components/Forms/EditProfilePicForm.jsx","components/App/Edit/EditUserInfo.jsx","components/App/NotFound/NotFound.jsx","components/Forms/LoginForm.jsx","store/fetcher/authFetcher.js","components/Forms/RegisterForm.jsx","components/App/Me/Me.jsx","App.js","store/store.js","store/auth/authReducer.js","store/userPosts/userPostsReducer.js","store/users/usersReducer.js","store/user/userReducer.js","store/posts/postsReducer.js","store/fetchStatus/statusReducer.js","store/errors/errorsReducer.js","index.js"],"names":["LOGIN","EDIT","REGISTER","LOGOUT","FOLLOW_USER","UNFOLLOW_USER","registerUser","data","type","actionTypes","loginUser","followUser","editInfo","unfollowUser","GET_USER_POSTS","MAKE_POST","EDIT_POST","COMMENT_POST","DELETE_COMMENT","RESET_POSTS","EDIT_COMMENT","DELETE_POST","makePost","deletePost","editPost","editUserInfo","getAllUsersPosts","commentPost","config","URI","connect","state","auth","dispatch","signout","resetUserPosts","props","imageId","react_default","a","createElement","id","react_router_dom","to","className","src","concat","alt","localStorage","getItem","index_es","icon","faHome","faUsers","onClick","faSignOutAlt","Header","Header_Nav","Footer","GET_USER_SUBS_POSTS","getSubsPosts","FETCH_DATA","FETCH_BEGIN","FETCH_ERROR","beginFetch","actionsTypes","fetchData","errorFetch","PostForm","text","fd","FormData","imagePreviewUrl","handleChangeInput","e","persist","files","target","length","reader","FileReader","file","_this","append","name","onloadend","setState","oldState","result","readAsDataURL","Object","defineProperty","value","handleSubmit","preventDefault","get","upload","createSnackbar","message","timeout","handlePreviewImgClose","_this$state","this","encType","onSubmit","placeholder","onChange","htmlFor","disabled","keys","Fragment","React","Component","postData","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetchStatusActions","fetch","method","headers","Authorization","body","sent","json","error","userPostActions","post","t0","console","log","stop","_x","apply","arguments","wrapComponent","_id","username","Forms_PostForm","calcTime","dateIsoFormat","diff","Date","Math","floor","pluralize","GET_USER_DATA","FOLLOW","UNFOLLOW","COMMENT_USER_POST","follow","unfollow","getUserData","editComment","commentData","commentId","_ref5","_callee5","_context5","Content-Type","JSON","stringify","_x5","DeleteModal","handleClose","deleteFunc","feedId","isPost","SEARCH","search","ERROR","RESET_ERRORS","fetchError","resetErrors","getUser","userId","_ref3","_callee2","_context2","userActions","user","_x2","_ref4","_callee3","_context3","authActions","me","_x3","UserCard","_this$props","firstName","lastName","getUserInfo","Modal","users","modalHeaderName","map","u","key","Discover_UserCard","userPosts","posts","likeCom","_ref2","errors","likeComment","dislikeCom","dislikeComment","editComm","deleteComm","_callee4","_context4","_x4","deleteComment","creatorName","creatorImg","date","likes","_useState","useState","_useState2","slicedToArray","showDeleteModal","setShowModal","_useState3","_useState4","showLikesPeopleModal","setShowLikesPeopleModal","_useState5","_useState6","likesCount","setlikesCount","initCommentIsLiked","includes","_useState7","_useState8","isLiked","setIsLiked","_useState9","_useState10","likers","setLikers","fetchLikes","useEffect","filter","l","faHeart","toConsumableArray","faTrash","Modals_DeleteModal","Modals_Modal","useForms","callback","isRegister","inputs","setInputs","undefined","objectSpread","postActions","postId","_useForms","CommentsSection","comments","c","CommentComponents_Comment","creator","Forms_CommentForm","editUserPost","_ref7","_callee7","_context7","_x7","like","likePost","dislike","dislikePost","delPost","_ref6","_callee6","_context6","_x6","userImg","postImg","setShowDeleteModal","showForm","setShowForm","showComments","setShowComments","setLikes","initPostLiked","findIndex","_useState11","_useState12","textDivClassName","btnsDivClassName","likesString","handleShowModal","handleShowComments","Forms_EditFeedForm","style","color","faComment","faTrashAlt","faEdit","CommentsList","sortByDate","b","dateA","PostsSection","sort","p","PostComponents_Post","Loader","Home","subsPosts","fetchStatus","PostComponents_MakePostDiv","components_Loader_Loader","PostComponents_PostsSection","UserProfile","showModal","handleShow","_this2","entries","isFollowed","followers","react_router","href","subscriptions","prevProps","match","params","FoundPeopleList","foundUsers","searchText","usersActions","searchUser","Discover_FoundPeopleList","userData","setItem","userPostsActions","changePass","passData","_ref8","errorsActions","resetErr","values","oldPassword","newPassword","EditForm","changeProfilePic","userPic","EditUserInfo","EditProfilePicForm","EditUserInfoForm","Forms_ChangePasswordForm","NotFound","login","roles","token","faEnvelope","email","faKey","password","defaultValue","register","registerData","_res","msg","faUserCircle","faUser","faUserAlt","setModalHeaderName","setUsers","_props$auth","App","Header_Header","path","exact","render","App_Home_Home","Forms_LoginForm","assign","App_UserProfile_UserProfile","Me_Me","Discover_Discover","Edit_EditUserInfo","Forms_RegisterForm","component","Footer_Footer","getUserPosts","persistConfig","storage","stateReconciler","autoMergeLevel2","whitelist","myPersistReducer","persistReducer","combineReducers","action","newState","clear","indexOfChangedPost","obj","Array","isArray","store","createStore","applyMiddleware","thunk","persistor","persistStore","storeCongig","ReactDOM","es","integration_react","react_snackbar_alert_min","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bc614fdc.chunk.js","sourcesContent":["export const LOGIN = \"LOGIN\";\r\nexport const EDIT = \"EDIT\";\r\nexport const REGISTER = \"REGISTER\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const FOLLOW_USER = \"FOLLOW_USER\";\r\nexport const UNFOLLOW_USER = \"UNFOLLOW_USER\";","import * as actionTypes from './actionTypes';\r\n\r\nexport function registerUser(data) {\r\n    return {\r\n        type: actionTypes.REGISTER,\r\n        data\r\n    }\r\n}\r\n\r\nexport function loginUser(data) {\r\n    return {\r\n        type: actionTypes.LOGIN,\r\n        data\r\n    }\r\n}\r\n\r\nexport function followUser(data) {\r\n    return {\r\n        type: actionTypes.FOLLOW_USER,\r\n        data\r\n    }\r\n}\r\n\r\nexport function editInfo(data) {\r\n    return {\r\n        type: actionTypes.EDIT,\r\n        data\r\n    }\r\n}\r\n\r\nexport function unfollowUser(data) {\r\n    return {\r\n        type: actionTypes.UNFOLLOW_USER,\r\n        data\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: actionTypes.LOGOUT,\r\n    }\r\n}","export const GET_USER_POSTS = \"GET_USER_POSTS\";\r\nexport const MAKE_POST = \"MAKE_POST\";\r\nexport const EDIT_POST = \"EDIT_POST\";\r\nexport const EDIT = \"EDIT\";\r\nexport const COMMENT_POST = \"COMMENT_POST\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\nexport const RESET_POSTS = \"RESET_POSTS\";\r\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\r\nexport const DELETE_POST = \"DELETE_POST\";","import * as actionTypes from './actionTypes';\r\n\r\nexport function makePost(data) {\r\n    return {\r\n        type: actionTypes.MAKE_POST,\r\n        data\r\n    }\r\n}\r\n\r\nexport function deletePost(data) {\r\n    return {\r\n        type: actionTypes.DELETE_POST,\r\n        data\r\n    }\r\n}\r\n\r\nexport function deleteComment(data) {\r\n    return {\r\n        type: actionTypes.DELETE_COMMENT,\r\n        data\r\n    }\r\n}\r\n\r\nexport function editPost(data) {\r\n    return {\r\n        type: actionTypes.EDIT_POST,\r\n        data\r\n    }\r\n}\r\n\r\nexport function resetPosts() {\r\n    return {\r\n        type: actionTypes.RESET_POSTS,\r\n    }\r\n}\r\n\r\nexport function editUserInfo(data) {\r\n    return {\r\n        type: actionTypes.EDIT,\r\n        data\r\n    }\r\n}\r\n\r\nexport function editComment(data) {\r\n    return {\r\n        type: actionTypes.EDIT_COMMENT,\r\n        data\r\n    }\r\n}\r\n\r\n\r\nexport function getAllUsersPosts(data) {\r\n    return {\r\n        type: actionTypes.GET_USER_POSTS,\r\n        data\r\n    }\r\n}\r\n\r\nexport function commentPost(data) {\r\n    return {\r\n        type: actionTypes.COMMENT_POST,\r\n        data\r\n    }\r\n}","const URI = 'http://localhost:8080';\r\n\r\nconst config = {\r\n    URI\r\n}\r\n\r\nexport default config;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUsers, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { logout } from '../../../../store/auth/actionsCreator';\r\nimport { resetPosts } from '../../../../store/userPosts/actionsCreator';\r\nimport config from '../../../../config/config';\r\n\r\nfunction Nav(props) {\r\n    const { imageId } = props.auth;\r\n\r\n    const handleSignOut = () => {\r\n\r\n        props.resetUserPosts();\r\n        props.signout();\r\n    }\r\n\r\n    return (\r\n        <nav id=\"main-nav\">\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/me\">\r\n                        <figure className=\"nav-profilePic\">\r\n                            <img src={`${config.URI}/feed/image/${imageId}`} alt=\"\" />\r\n                            <figcaption>{localStorage.getItem('username')}</figcaption>\r\n                        </figure>\r\n                    </Link>\r\n                </li>\r\n                <li><Link to=\"/\"><FontAwesomeIcon icon={faHome} /> HOME</Link></li>\r\n                <li><Link to=\"/discover\"><FontAwesomeIcon icon={faUsers} /> DISCOVER</Link></li>\r\n                <li><Link to=\"/signin\" onClick={handleSignOut}><FontAwesomeIcon icon={faSignOutAlt} /> LOGOUT</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        signout: () => dispatch(logout()),\r\n        resetUserPosts: () => dispatch(resetPosts())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import React from 'react';\r\nimport Nav from './Nav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header>\r\n            <div className=\"logo\">\r\n                <Link to=\"/\"><h1>iWi</h1></Link>\r\n            </div>\r\n            {\r\n                localStorage.getItem('username') \r\n                ? <Nav />\r\n                : null\r\n            }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer>\r\n            <p>\r\n                &#9400; CopyRights Tsani Mazalov 2019\r\n        </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","export const DELETE_COMMENT = \"DELETE_COMMENT\";\r\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\r\nexport const COMMENT_POST = \"COMMENT_POST\";\r\nexport const GET_USER_SUBS_POSTS = \"GET_USER_SUBS_POSTS\";","import * as actionTypes from './actionTypes';\r\n\r\nexport function commentPost(data) {\r\n    return {\r\n        type: actionTypes.COMMENT_POST,\r\n        data\r\n    }\r\n}\r\nexport function deleteComment(data) {\r\n    return {\r\n        type: actionTypes.DELETE_COMMENT,\r\n        data\r\n    }\r\n}\r\n\r\nexport function editComment(data) {\r\n    return {\r\n        type: actionTypes.EDIT_COMMENT,\r\n        data\r\n    }\r\n}\r\n\r\nexport function getSubsPosts(data) {\r\n    return {\r\n        type: actionTypes.GET_USER_SUBS_POSTS,\r\n        data\r\n    }\r\n}","export const FETCH_DATA = 'FETCH_DATA';\r\nexport const FETCH_BEGIN = 'FETCH_BEGIN';\r\nexport const FETCH_ERROR = 'FETCH_ERROR';","import * as actionsTypes from './actionTypes';\r\n\r\nexport function beginFetch() {\r\n    return {\r\n        type: actionsTypes.FETCH_BEGIN\r\n    }\r\n}\r\n\r\nexport function fetchData() {\r\n    return {\r\n        type: actionsTypes.FETCH_DATA\r\n    }\r\n}\r\n\r\nexport function errorFetch() {\r\n    return {\r\n        type: actionsTypes.FETCH_ERROR\r\n    }\r\n}","import React from 'react';\r\nimport { uploadPost } from '../../store/fetcher/postFetcher'\r\nimport { connect } from 'react-redux';\r\nimport { wrapComponent } from 'react-snackbar-alert';\r\n\r\nclass PostForm extends React.Component {\r\n    state = {\r\n        text: '',\r\n        fd: new FormData(),\r\n        imagePreviewUrl: '',\r\n    }\r\n\r\n    handleChangeInput = (e) => {\r\n        e.persist();\r\n\r\n        const files = e.target.files;\r\n\r\n        if (files && files.length > 0) {\r\n            let reader = new FileReader();\r\n            let file = e.target.files[0];\r\n\r\n            this.state.fd.append(e.target.name, file, e.target.name);\r\n\r\n            reader.onloadend = () => {\r\n                this.setState((oldState) => ({\r\n                    imagePreviewUrl: reader.result,\r\n                }));\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        }\r\n\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //check for empty text and send message to user or emtpy file \r\n        if (this.state.text === '' && !this.state.fd.get('postImg')) {\r\n            //using createSnackbar for displaying warning message to user \r\n            this.props.createSnackbar({\r\n                message: 'You can not upload post without image or text!',\r\n                timeout: 3000,\r\n            });\r\n        } else {\r\n            this.state.fd.append('text', this.state.text);\r\n            this.props.upload(this.state.fd);\r\n        }\r\n\r\n        //reset state\r\n        this.setState({ text: '', imagePreviewUrl: '', fd: new FormData() })\r\n    }\r\n\r\n    handlePreviewImgClose = (e) => {\r\n        this.setState({ imagePreviewUrl: '' })\r\n    }\r\n\r\n    render() {\r\n        const { text, imagePreviewUrl } = this.state;\r\n\r\n        return (\r\n            <div className=\"postForm\">\r\n                <form id=\"postForm\" encType=\"multipart/form-data\" onSubmit={this.handleSubmit}>\r\n                    <textarea\r\n                        name=\"text\"\r\n                        id=\"postText\"\r\n                        placeholder=\"Write something to your friends...\"\r\n                        value={text}\r\n                        onChange={this.handleChangeInput}\r\n                    />\r\n                    <div className=\"inline-form-items\">\r\n                        <div className=\"uploadImage\">\r\n                            <label htmlFor=\"file\"><img className=\"icon\" src=\"https://cdn.iconscout.com/icon/free/png-256/gallery-44-267592.png\" alt=\"uploadImg\" />Image</label>\r\n                            <input\r\n                                type=\"file\"\r\n                                id=\"file\"\r\n                                name=\"postImg\"\r\n                                onChange={this.handleChangeInput}\r\n                            />\r\n                        </div>\r\n                        <input disabled={!(this.state.fd.keys() > 0 || (text !== '' || imagePreviewUrl !== ''))} type=\"submit\" value=\"Post\" />\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"uploadedImgPreview\">\r\n                    {\r\n                        imagePreviewUrl !== '' ? <React.Fragment>\r\n                            <img id=\"previewImg\" src={imagePreviewUrl} alt=\"uploadedImg\" />\r\n                            <div onClick={this.handlePreviewImgClose} className=\"overlay\"><span>x</span></div>\r\n                        </React.Fragment> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        upload: (data) => dispatch(uploadPost(data))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(wrapComponent(PostForm));","import * as postActions from '../posts/actionsCreator';\r\nimport * as userPostActions from '../userPosts/actionsCreator';\r\nimport * as fetchStatusActions from '../fetchStatus/actionsCreator';\r\nimport config from '../../config/config';\r\n\r\nexport function uploadPost(postData) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/feed/posts/create`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n                body: postData\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            //if server response with error, dispatch it\r\n            if (data.error) {\r\n                dispatch(fetchStatusActions.errorFetch());\r\n            } else {\r\n                dispatch(fetchStatusActions.fetchData());\r\n                dispatch(userPostActions.makePost(data.post));\r\n            };\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getUserPosts(userId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/feed/posts/${userId}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                }\r\n            });\r\n            const data = await res.json();\r\n\r\n            dispatch(userPostActions.getAllUsersPosts(data.posts));\r\n            dispatch(fetchStatusActions.fetchData());\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAllSubsPosts() {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/feed/posts`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                }\r\n            });\r\n            const data = await res.json();\r\n\r\n            dispatch(fetchStatusActions.fetchData());\r\n            dispatch(postActions.getSubsPosts(data.posts));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function likePost(postId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await fetch(`${config.URI}/feed/posts/like/${postId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            //chek if server response ERRORS\r\n            if (data.errors.length > 0) dispatch(fetchStatusActions.errorFetch());\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function dislikePost(postId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await fetch(`${config.URI}/feed/posts/dislike/${postId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            //chek if server response ERRORS\r\n            if (data.errors.length > 0) dispatch(fetchStatusActions.errorFetch());\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function deletePost(postId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/feed/posts/${postId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                }\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            dispatch(fetchStatusActions.fetchData());\r\n            dispatch(userPostActions.deletePost(data.posts));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function editPost(postData, postId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/feed/posts/edit/${postId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': 'Api ' + localStorage.getItem('token'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(postData)\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            dispatch(fetchStatusActions.fetchData());\r\n            dispatch(userPostActions.editPost(data.post));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport PostForm from '../Forms/PostForm';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport config from '../../config/config';\r\n\r\nfunction MakePostDiv({ auth }) {\r\n    return (\r\n        <div id=\"makeAPost\">\r\n            <figure className=\"userInfo\">\r\n                <Link to={\"/profile/\" + auth._id}>\r\n                    <img src={`${config.URI}/feed/image/${auth.imageId}`} alt=\"userPic\" />\r\n                    <figcaption>{auth.username}</figcaption>\r\n                </Link>\r\n            </figure>\r\n            <PostForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MakePostDiv);","export default function calcTime(dateIsoFormat) {\r\n    let diff = new Date() - (new Date(dateIsoFormat));\r\n    diff = Math.floor(diff / 60000);\r\n    if (diff < 1) return 'less than a minute';\r\n    if (diff < 60) return diff + ' minute' + pluralize(diff);\r\n    diff = Math.floor(diff / 60);\r\n    if (diff < 24) return diff + ' hour' + pluralize(diff);\r\n    diff = Math.floor(diff / 24);\r\n    if (diff < 30) return diff + ' day' + pluralize(diff);\r\n    diff = Math.floor(diff / 30);\r\n    if (diff < 12) return diff + ' month' + pluralize(diff);\r\n    diff = Math.floor(diff / 12);\r\n    return diff + ' year' + pluralize(diff);\r\n    function pluralize(value) {\r\n        if (value !== 1) return 's';\r\n        else return '';\r\n    }\r\n}\r\n","export const GET_USER_DATA = \"GET_USER_DATA\";\r\nexport const FOLLOW = \"FOLLOW\";\r\nexport const UNFOLLOW = \"UNFOLLOW\";\r\nexport const DELETE_USER_POST = \"DELETE_USER_POST\";\r\nexport const COMMENT_USER_POST = \"COMMENT_USER_POST\";","import * as actionTypes from './actionTypes';\r\n\r\nexport function follow(data) {\r\n    return {\r\n        type: actionTypes.FOLLOW,\r\n        data\r\n    }\r\n}\r\n\r\nexport function unfollow(data) {\r\n    return {\r\n        type: actionTypes.UNFOLLOW,\r\n        data\r\n    }\r\n}\r\n\r\nexport function getUserData(data) {\r\n    return {\r\n        type: actionTypes.GET_USER_DATA,\r\n        data\r\n    }\r\n}\r\n\r\nexport function commentPost(data) {\r\n    return {\r\n        type: actionTypes.COMMENT_USER_POST,\r\n        data\r\n    }\r\n}\r\n\r\n","import * as postActions from '../posts/actionsCreator';\r\nimport * as userActions from '../user/actionsCreator';\r\nimport * as fetchStatusActions from '../fetchStatus/actionsCreator';\r\nimport * as userPostActions from '../userPosts/actionsCreator';\r\nimport config from '../../config/config';\r\n\r\nexport function makeComment(commentData) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await fetch(`${config.URI}/feed/comments/create`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n                body: JSON.stringify(commentData),\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            dispatch(userPostActions.commentPost(data.post));\r\n            dispatch(postActions.commentPost(data.post));\r\n            dispatch(userActions.commentPost(data.post));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function likeComment(commentId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await fetch(`${config.URI}/feed/comments/like/${commentId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            //chek if server response ERRORS\r\n            if(data.errors.length > 0) dispatch(fetchStatusActions.errorFetch());\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function dislikeComment(commentId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await fetch(`${config.URI}/feed/comments/dislike/${commentId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            //chek if server response ERRORS\r\n            if(data.errors.length > 0) dispatch(fetchStatusActions.errorFetch());\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteComment(commentId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await fetch(`${config.URI}/feed/comments/delete/${commentId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            dispatch({type: 'DELETE_COMMENT', data: data.post});\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function editComment(commentData, commentId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await fetch(`${config.URI}/feed/comments/edit/${commentId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n                body: JSON.stringify(commentData)\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            dispatch({type: 'EDIT_COMMENT', data: data.post});\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nfunction DeleteModal({ handleClose, deleteFunc, feedId, isPost }) {\r\n    return (\r\n        <div>\r\n            {/* The Modal */}\r\n            <div id=\"myModal\" className=\"modal\">\r\n                {/* Modal content */}\r\n                <div className=\"modal-content\">\r\n                    <span onClick={handleClose} className=\"close\">×</span>\r\n                    <p>{`Do you really want to delete this ${isPost ? 'post' : 'comment'}?`}</p>\r\n                    <button onClick={() => deleteFunc(feedId)} className=\"btn info\">Yes</button>\r\n                    <button onClick={handleClose} className=\"btn default\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteModal;","export const SEARCH = \"SEARCH\";","import * as actionTypes from './actionTypes';\r\n\r\nexport function search(data) {\r\n    return {\r\n        type: actionTypes.SEARCH,\r\n        data\r\n    }\r\n}","export const ERROR = \"ERROR\";\r\nexport const RESET_ERRORS = \"RESET_ERRORS\";\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport function fetchError(data) {\r\n    return {\r\n        type: actionTypes.ERROR,\r\n        data\r\n    }\r\n}\r\n\r\nexport function resetErrors() {\r\n    return {\r\n        type: actionTypes.RESET_ERRORS,\r\n    }\r\n}","import * as userActions from '../user/actionsCreator';\r\nimport * as usersActions from '../users/actionsCreator';\r\nimport * as authActions from '../auth/actionsCreator';\r\nimport * as userPostsActions from '../userPosts/actionsCreator';\r\nimport * as fetchStatusActions from '../fetchStatus/actionsCreator';\r\nimport * as errorsActions from '../errors/actionsCreator';\r\nimport config from '../../config/config';\r\n\r\nexport function searchUser({ searchText }) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/user/search?searchText=${searchText}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            dispatch(fetchStatusActions.fetchData());\r\n            dispatch(usersActions.search(data));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getUser(userId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/user/info/${userId}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            dispatch(fetchStatusActions.fetchData());\r\n            dispatch(userActions.getUserData(data.user));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function followUser(userId) {\r\n    return async (dispatch) => {\r\n        dispatch(fetchStatusActions.beginFetch());\r\n        try {\r\n            const res = await fetch(`${config.URI}/user/follow/${userId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            dispatch(fetchStatusActions.fetchData());\r\n            dispatch(authActions.followUser(data.me));\r\n            dispatch(userActions.follow(data.user));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function unfollowUser(userId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/user/unfollow/${userId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Api ' + localStorage.getItem('token')\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n            dispatch(fetchStatusActions.fetchData());\r\n            dispatch(userActions.unfollow(data.user));\r\n            dispatch(authActions.unfollowUser(data.me));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function editUserInfo(userData) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/user/edit`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': 'Api ' + localStorage.getItem('token'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            localStorage.setItem('username', data.user.username);\r\n\r\n            dispatch(fetchStatusActions.fetchData());\r\n            dispatch(authActions.editInfo(data.user));\r\n            dispatch(userPostsActions.editUserInfo(data.user.posts));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeUserPic(userPic) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/user/changePic`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': 'Api ' + localStorage.getItem('token'),\r\n                },\r\n                body: userPic\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            dispatch(fetchStatusActions.fetchData());\r\n            dispatch(authActions.editInfo(data.user));\r\n            dispatch(userPostsActions.editUserInfo(data.user.posts));\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n        }\r\n    }\r\n}\r\n\r\nexport function changePassword(passData) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchStatusActions.beginFetch());\r\n            const res = await fetch(`${config.URI}/user/changePassword`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': 'Api ' + localStorage.getItem('token'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(passData)\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(data);\r\n\r\n            if(data.error) {\r\n                dispatch(errorsActions.fetchError([data]));\r\n            } else {\r\n                dispatch(fetchStatusActions.fetchData());\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchStatusActions.errorFetch());\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from '../../../store/fetcher/userFetcher';\r\nimport config from '../../../config/config';\r\n\r\nclass UserCard extends Component {\r\n    render() {\r\n        const { imageId, username, id, firstName, lastName } = this.props;\r\n        return (\r\n            <div className=\"card\">\r\n                <Link to={\"/profile/\" + id}>\r\n                    <figure>\r\n                        <img src={`${config.URI}/feed/image/${imageId}`} alt=\"\" />\r\n                        <div className=\"names\">\r\n                            <figcaption>{username}</figcaption>\r\n                            <span className=\"fullname\">{firstName} {lastName}</span>\r\n                        </div>\r\n                    </figure>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getUserInfo: (userId) => dispatch(getUser(userId))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(UserCard);","import React, { Component } from 'react';\r\nimport UserCard from '../App/Discover/UserCard';\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        const { users, modalHeaderName, handleClose } = this.props;\r\n\r\n        return (\r\n            <div onClick={handleClose} id=\"myModal\" className=\"modal\">\r\n                {/* Modal content */}\r\n\r\n                <div className=\"modal-content\">\r\n                    <span onClick={handleClose} className=\"close\">&times;</span>\r\n                    <div className=\"modal-header\">\r\n                        <h2>{modalHeaderName}</h2>\r\n                    </div>\r\n\r\n                    <ul>\r\n                        {\r\n                            users.length > 0 \r\n                            ? users.map(u => (<li key={u._id}>\r\n                                <UserCard\r\n                                    imageId={u.imageId}\r\n                                    username={u.username}\r\n                                    firstName={u.firstName}\r\n                                    lastName={u.lastName}\r\n                                    id={u._id}\r\n                                />\r\n                            </li>))\r\n                            : <li>No {modalHeaderName}</li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { useState, useEffect } from 'react';\r\nimport calcTime from '../../utils/calcTime';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { likeComment, dislikeComment, deleteComment, editComment } from '../../store/fetcher/commentFetcher'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport DeleteModal from '../Modals/DeleteModal';\r\nimport config from '../../config/config';\r\nimport Modal from '../Modals/Modal';\r\n\r\nfunction Comment({ creatorName, creatorImg, text, date, likes, commentId, likeCom, dislikeCom, userId, auth, deleteComm }) {\r\n    //hook for question modal about deleting\r\n    const [showDeleteModal, setShowModal] = useState(false);\r\n    //hook for showing likes people\r\n    const [showLikesPeopleModal, setShowLikesPeopleModal] = useState(false);\r\n    //hook for handle like post \r\n    const [likesCount, setlikesCount] = useState(likes.length);\r\n    //hook for handle liked/not liked\r\n    const initCommentIsLiked = likes.includes(localStorage.getItem('userId'))\r\n    const [isLiked, setIsLiked] = useState(initCommentIsLiked);\r\n    //hook for likers\r\n    const [likers, setLikers] = useState([]);\r\n\r\n    //function for fetch comment likes\r\n    const fetchLikes = async () => {\r\n        const res = await fetch(`${config.URI}/feed/comments/likes/${commentId}`);\r\n        const data = await res.json();\r\n        setLikers(data.likes);\r\n    }\r\n\r\n    //when component did mound , fetched the likers of the comment for showing them in the modal\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        fetchLikes();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleLikeComment = (e) => {\r\n        e.persist();\r\n\r\n        setlikesCount((likesCount) => likesCount + 1);\r\n        setIsLiked((isLiked) => !isLiked);\r\n        likeCom(commentId);\r\n\r\n        //correct likers like add logged in user in likers array\r\n        setLikers((likers) => [...likers, auth]);\r\n    }\r\n\r\n    const handleDisLikeComment = (e) => {\r\n        e.persist();\r\n\r\n        setlikesCount((likesCount) => likesCount - 1);\r\n        setIsLiked((isLiked) => !isLiked);\r\n        dislikeCom(commentId);\r\n\r\n        //correct likers like remove logged in user from likers array\r\n        setLikers((likers) => {\r\n            likers = likers.filter(l => l._id !== auth._id)\r\n            return likers;\r\n        });\r\n    }\r\n\r\n    const handleShowModal = (e) => {\r\n        e.persist();\r\n\r\n        setShowModal((showDeleteModal) => true);\r\n    }\r\n\r\n    const handleShowLikesModal = (e) => {\r\n        e.persist();\r\n\r\n        setShowLikesPeopleModal((showLikesPeopleModal) => true);\r\n    }\r\n\r\n    const handleClose = (e) => {\r\n        e.persist();\r\n\r\n        setShowModal((showDeleteModal) => false);\r\n        setShowLikesPeopleModal((showLikesPeopleModal) => false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"comment\">\r\n            <figure className=\"commentData\">\r\n                <Link to={\"/profile/\" + userId}>\r\n                    <img src={`${config.URI}/feed/image/${creatorImg}`} alt=\"\" />\r\n                    <figcaption>{creatorName}</figcaption>\r\n                </Link>\r\n            </figure>\r\n            <div className=\"commentContainer\">\r\n                {/* If edit form is shown , both comment's text and buttons are not shown */}\r\n                <p>{text} </p>\r\n                <div className=\"commentBtns\">\r\n                    {\r\n                        isLiked\r\n                            ? <button onClick={handleDisLikeComment} className=\"liked\"><FontAwesomeIcon icon={faHeart} /></button>\r\n                            : <button onClick={handleLikeComment}><FontAwesomeIcon icon={faHeart} /></button>\r\n                    }\r\n\r\n                    {\r\n                        auth._id === userId\r\n                            ? <button onClick={handleShowModal} ><FontAwesomeIcon icon={faTrash} /></button>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"meta\">\r\n                <span className=\"date\">{calcTime(date)}</span>\r\n                <span onClick={handleShowLikesModal} >{likesCount} likes</span>\r\n            </div>\r\n\r\n            {\r\n                showDeleteModal\r\n                    ? <DeleteModal\r\n                        isPost={false}\r\n                        feedId={commentId}\r\n                        deleteFunc={deleteComm}\r\n                        handleClose={handleClose} />\r\n                    : null\r\n            }\r\n\r\n            {/* Modal for likers */}\r\n            {\r\n                showLikesPeopleModal ? <Modal handleClose={handleClose} modalHeaderName={'Likes'} users={likers} /> : null\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        likeCom: (commentId) => dispatch(likeComment(commentId)),\r\n        dislikeCom: (commentId) => dispatch(dislikeComment(commentId)),\r\n        editComm: (commentId) => dispatch(editComment(commentId)),\r\n        deleteComm: (commentId) => dispatch(deleteComment(commentId))\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        userPosts: state.userPosts,\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);","import { useState } from 'react';\r\n\r\nfunction useForms(callback, isRegister) {\r\n    const [inputs, setInputs] = useState({});\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        callback();\r\n\r\n        if (isRegister === undefined && !isRegister) {\r\n            setInputs(inputs => ({}))\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (e) => {\r\n        e.persist();\r\n        setInputs(inputs => ({ ...inputs, [e.target.name]: e.target.value }));\r\n    }\r\n\r\n    return {\r\n        inputs,\r\n        handleSubmit,\r\n        handleChangeInput\r\n    }\r\n}\r\n\r\nexport default useForms;","import React from 'react';\r\nimport useForms from '../../hooks/useForms';\r\nimport { connect } from 'react-redux';\r\nimport { makeComment } from '../../store/fetcher/commentFetcher';\r\nimport { wrapComponent } from 'react-snackbar-alert';\r\n\r\nfunction CommentForm({ postId, commentPost, createSnackbar }) {\r\n    const { handleSubmit, handleChangeInput, inputs } = useForms((e) => {\r\n\r\n        //check for empty text and send message to user\r\n        if (inputs.text === '') {\r\n            createSnackbar({\r\n                message: 'You can not make comment without text!',\r\n                timeout: 3000,\r\n            });\r\n        } else {\r\n            commentPost({ ...inputs, postId })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <form className=\"commentForm\" onSubmit={handleSubmit}>\r\n            <textarea\r\n                placeholder=\"Write a comment...\"\r\n                name=\"text\"\r\n                id=\"comment\"\r\n                value={inputs.text || ''}\r\n                onChange={handleChangeInput}\r\n            />\r\n            <input disabled={inputs.text === '' || !inputs.text} type=\"submit\" value=\"Comment\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        commentPost: (data) => dispatch(makeComment(data))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(wrapComponent(CommentForm));\r\n","import React from 'react';\r\nimport Comment from './Comment';\r\nimport CommentForm from '../Forms/CommentForm';\r\n\r\nfunction CommentsSection({ comments, postId }) {\r\n    return (\r\n        <section className=\"comments\">\r\n            <h3>Comments</h3>\r\n            <ul>\r\n                {\r\n                    comments.length > 0\r\n                        ? comments.map(c => (<li key={c._id}>\r\n                            <Comment\r\n                                creatorName={c.creator.username}\r\n                                creatorImg={c.creator.imageId}\r\n                                userId={c.creator._id}\r\n                                text={c.text}\r\n                                date={c.date}\r\n                                likes={c.likes}\r\n                                commentId={c._id}\r\n                            />\r\n                        </li>))\r\n                        : null\r\n                }\r\n            </ul>\r\n            <CommentForm postId={postId} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CommentsSection;","import React from 'react';\r\nimport useForms from '../../hooks/useForms';\r\nimport { connect } from 'react-redux';\r\nimport { editComment } from '../../store/fetcher/commentFetcher';\r\nimport { editPost } from '../../store/fetcher/postFetcher';\r\n\r\nfunction EditFeedForm({ isPost, feedId, text, editUserPost, editComm }) {\r\n    const { handleSubmit, handleChangeInput, inputs } = useForms((e) => {\r\n        if (isPost) {\r\n            editUserPost(inputs, feedId);\r\n        } else {\r\n            editComm(inputs, feedId);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <form id=\"editFeedForm\" onSubmit={handleSubmit}>\r\n            <textarea\r\n                placeholder=\"Write something...\"\r\n                name=\"text\"\r\n                id=\"feed\"\r\n                value={inputs.text || text}\r\n                onChange={handleChangeInput}\r\n            />\r\n            <input type=\"submit\" value=\"SAVE\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        editComm: (data, commentId) => dispatch(editComment(data, commentId)),\r\n        editUserPost: (data, postId) => dispatch(editPost(data, postId)),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(EditFeedForm);","import React, { useState } from 'react';\r\nimport CommentsList from '../CommentComponents/CommentsList';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart, faComment, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport calcTime from '../../utils/calcTime';\r\nimport { likePost, dislikePost, deletePost } from '../../store/fetcher/postFetcher'\r\nimport { followUser } from '../../store/fetcher/userFetcher'\r\nimport { connect } from 'react-redux';\r\nimport DeleteModal from '../Modals/DeleteModal';\r\nimport EditFeedForm from '../Forms/EditFeedForm';\r\nimport config from '../../config/config';\r\nimport Modal from '../Modals/Modal';\r\n\r\nfunction Post({ username, userImg, date, text, postImg, likes, comments, postId, like, dislike, userId, auth, delPost, userPosts }) {\r\n\r\n    //hook for question modal about deleting\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    //hook for showing edit form\r\n    const [showForm, setShowForm] = useState(false);\r\n    //hook for showing comments section and comment form\r\n    const [showComments, setShowComments] = useState(false);\r\n    //hook for showing likes people\r\n    const [showLikesPeopleModal, setShowLikesPeopleModal] = useState(false);\r\n    //hook for handle like post \r\n    const [likesCount, setLikes] = useState(likes.length);\r\n    //hook for handle liked/not liked\r\n    const initPostLiked = likes.findIndex(like => like._id === localStorage.getItem('userId')) >= 0\r\n    const [isLiked, setIsLiked] = useState(initPostLiked);\r\n\r\n    //elements styles against post info\r\n    const textDivClassName = (postImg ? 'postText' : 'postText text-only-large');\r\n    const btnsDivClassName = (postImg ? \"buttons\" : \"buttons text-only-small\");\r\n    const likesString = (likesCount === 1 ? 'like' : 'likes');\r\n\r\n    const handleLikePost = (e) => {\r\n        e.persist();\r\n\r\n        setLikes((likesCount) => likesCount + 1);\r\n        setIsLiked((isLiked) => !isLiked);\r\n        like(postId);\r\n    }\r\n\r\n    const handleDisLikePost = (e) => {\r\n        e.persist();\r\n\r\n        setLikes((likesCount) => likesCount - 1);\r\n        setIsLiked((isLiked) => !isLiked);\r\n        dislike(postId);\r\n    }\r\n\r\n    const handleShowModal = (e) => {\r\n        e.persist();\r\n\r\n        setShowDeleteModal((showDeleteModal) => true);\r\n    }\r\n\r\n    const handleShowLikesModal = (e) => {\r\n        e.persist();\r\n\r\n        setShowLikesPeopleModal((showLikesPeopleModal) => true);\r\n    }\r\n\r\n    const handleShowEditForm = (e) => {\r\n        e.persist();\r\n\r\n        setShowForm((showForm) => true);\r\n    }\r\n\r\n    const handleClose = (e) => {\r\n        e.persist();\r\n\r\n        setShowDeleteModal((showDeleteModal) => false);\r\n        setShowLikesPeopleModal(() => false);\r\n    }\r\n\r\n    const handleShowComments = (e) => {\r\n        e.persist();\r\n\r\n        setShowComments((showComments) => !showComments);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"meta\">\r\n                <div>\r\n                    <figure className=\"userInfo\">\r\n                        <Link to={\"/profile/\" + userId}>\r\n                            <img src={`${config.URI}/feed/image/${userImg}`} alt=\"userPic\" />\r\n                            <figcaption>{username}</figcaption>\r\n                        </Link>\r\n                    </figure>\r\n                </div>\r\n                <span className=\"date\">{calcTime(date)}</span>\r\n            </div>\r\n\r\n            {/* If text is empty, dont show the paragraph */}\r\n            {\r\n                text === ''\r\n                    ? null\r\n                    : (<div className={textDivClassName}>\r\n                        {\r\n                            showForm ? <EditFeedForm isPost={true} feedId={postId} text={text} /> : <p>{text}</p>\r\n                        }\r\n                    </div>)\r\n            }\r\n\r\n            {\r\n                postImg\r\n                    ? (<figure>\r\n                        <img className=\"postPic\" src={`${config.URI}/feed/image/${postImg}`} alt=\"\" />\r\n                    </figure>)\r\n                    : null\r\n            }\r\n            <div className={btnsDivClassName}>\r\n                <div className=\"left\">\r\n                    {\r\n                        // likes.findIndex(like => like._id === localStorage.getItem('userId')) >= 0\r\n                        isLiked\r\n                            ? <button onClick={handleDisLikePost} className=\"liked\"><FontAwesomeIcon icon={faHeart} /></button>\r\n                            : <button onClick={handleLikePost}><FontAwesomeIcon icon={faHeart} /></button>\r\n                    }\r\n                    <button style={(showComments ? { color: \"#8AAAE5\" } : { color: 'inherit' })} onClick={handleShowComments}><FontAwesomeIcon icon={faComment} /></button>\r\n                </div>\r\n\r\n                <div className=\"right\">\r\n                    {/* Check Post username whether is equal to logged in username so button for delete and edit can show */}\r\n                    {\r\n                        (username === auth.username)\r\n                            ? (\r\n                                <div>\r\n                                    <button onClick={handleShowModal}><FontAwesomeIcon icon={faTrashAlt} /></button>\r\n                                    <button onClick={handleShowEditForm}><FontAwesomeIcon icon={faEdit} /></button>\r\n                                </div>\r\n                            )\r\n                            : (<div>\r\n                                {\r\n                                    localStorage.getItem('role') === 'Admin'\r\n                                        ? <button onClick={handleShowModal}><FontAwesomeIcon icon={faTrashAlt} /></button>\r\n                                        : null\r\n                                }\r\n                            </div>)\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"postMeta\">\r\n                <div className=\"meta\">\r\n                    <button onClick={handleShowLikesModal} className=\"likes\">{likesCount + ' ' + likesString}</button>\r\n                    <span onClick={handleShowComments}>{comments.length} Comments</span>\r\n                </div>\r\n\r\n                {\r\n                    showComments\r\n                        ? <CommentsList comments={comments} postId={postId} />\r\n                        : null\r\n                }\r\n\r\n            </div>\r\n\r\n            {\r\n                showDeleteModal ? <DeleteModal isPost={true} feedId={postId} deleteFunc={delPost} handleClose={handleClose} /> : null\r\n            }\r\n\r\n            {/* Modal for likers */}\r\n            {\r\n                showLikesPeopleModal ? <Modal handleClose={handleClose} modalHeaderName={'Likes'} users={likes} /> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        userPosts: state.userPosts\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        like: (postId) => dispatch(likePost(postId)),\r\n        dislike: (postId) => dispatch(dislikePost(postId)),\r\n        delPost: (postId) => dispatch(deletePost(postId)),\r\n        follow: (userId) => dispatch(followUser(userId)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\r\n","export default (a, b) => {\r\n    const dateA = new Date(a.date);\r\n    const dateB = new Date(b.date);\r\n    return dateB - dateA;\r\n}","import React, { Component } from 'react';\r\nimport Post from './Post';\r\nimport sortByDate from '../../utils/sortByDate';\r\n\r\nclass PostsSection extends Component {\r\n    render() {\r\n        const { posts } = this.props;\r\n        return (\r\n            <section id=\"posts\">\r\n                {posts.length > 0\r\n                    ? (\r\n                        posts\r\n                            .sort(sortByDate)\r\n                            .map(p => {\r\n                            return (<article key={p._id} className=\"post\">\r\n                                <Post\r\n                                    username={p.creator.username}\r\n                                    userId={p.creator._id}\r\n                                    userImg={p.creator.imageId}\r\n                                    postId={p._id}\r\n                                    date={p.date}\r\n                                    text={p.text}\r\n                                    postImg={p.imageId}\r\n                                    likes={p.likes}\r\n                                    comments={p.comments}\r\n                                />\r\n                            </article>\r\n                            )\r\n                        })\r\n                    )\r\n                    : null\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostsSection;","import React from 'react';\r\nimport './Loader.css';\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MakePostDiv from '../../PostComponents/MakePostDiv';\r\nimport PostsSection from '../../PostComponents/PostsSection';\r\nimport Loader from '../../Loader/Loader';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        const { userPosts, subsPosts, fetchStatus } = this.props;\r\n        console.log(userPosts, subsPosts);\r\n        return (\r\n            <main>\r\n                <MakePostDiv />\r\n                {\r\n                    fetchStatus > 0\r\n                        ? <Loader />\r\n                        : <PostsSection posts={userPosts.concat(subsPosts)} />\r\n                }\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userPosts: state.userPosts,\r\n        subsPosts: state.posts,\r\n        fetchStatus: state.fetchStatus\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PostsSection from '../../PostComponents/PostsSection';\r\nimport { followUser, unfollowUser, getUser } from '../../../store/fetcher/userFetcher';\r\nimport Modal from '../../Modals/Modal';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Loader from '../../Loader/Loader';\r\nimport config from '../../../config/config';\r\n\r\nclass UserProfile extends Component {\r\n    state = {\r\n        showModal: false,\r\n        users: [],\r\n        modalHeaderName: '',\r\n    }\r\n\r\n    handleShow = (e) => {\r\n        e.persist();\r\n\r\n        this.setState((oldState) => ({ showModal: true, users: this.props.user[e.target.id], modalHeaderName: e.target.name }));\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        e.persist();\r\n\r\n        this.setState((oldState) => ({ showModal: false, users: [], modalHeaderName: '' }));\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n\r\n        if (Object.entries(user).length === 0) {\r\n            return <Loader />\r\n        }\r\n\r\n        const isFollowed = user.followers.findIndex(u => u._id === localStorage.getItem('userId')) >= 0;\r\n\r\n        if (user.id === localStorage.getItem('userId')) {\r\n            return <Redirect to=\"/me\" />\r\n        }\r\n\r\n        return (\r\n            <main>\r\n                <div className=\"userInfoHeader\">\r\n                    <a href=\"./myprofile.html\">\r\n                        <figure className=\"profilePic\">\r\n                            <img src={`${config.URI}/feed/image/${user.imageId}`} alt=\"userImg\" />\r\n                            <figcaption>{user.username}</figcaption>\r\n                        </figure>\r\n                    </a>\r\n                    <div className=\"headerInfoContainer\">\r\n                        <div className=\"userMeta\">\r\n                            <span>{user.posts.length} posts</span>\r\n                            <span><button name=\"Followers\" id=\"followers\" onClick={this.handleShow}>{user.followers.length} followers</button></span>\r\n                            <span><button name=\"Subscriptions\" id=\"subscriptions\" onClick={this.handleShow}>{user.subscriptions.length} following</button></span>\r\n                        </div>\r\n                        {\r\n                            isFollowed\r\n                                ? <button onClick={() => this.props.unfollow(user.id)} className=\"followBtn\">UNFOLLOW</button>\r\n                                : <button onClick={() => this.props.follow(user.id)} className=\"followBtn\">FOLLOW</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <PostsSection posts={user.posts} />\r\n\r\n                {/* Modal for followers or following users */}\r\n                {\r\n                    this.state.showModal ? <Modal handleClose={this.handleClose} modalHeaderName={this.state.modalHeaderName} users={this.state.users} /> : null\r\n                }\r\n            </main>\r\n        )\r\n    }\r\n\r\n    //when url change, make sure that component will fetch new user data and will re-render\r\n    async componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.props.getUserInfo(this.props.match.params.userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUserInfo(this.props.match.params.userId)\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        follow: (userId) => dispatch(followUser(userId)),\r\n        unfollow: (userId) => dispatch(unfollowUser(userId)),\r\n        getUserInfo: (userId) => dispatch(getUser(userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\r\n","import React, { Component } from 'react';\r\nimport UserCard from './UserCard';\r\nimport { connect } from 'react-redux';\r\n\r\nclass FoundPeopleList extends Component {\r\n    render() {\r\n        const { foundUsers } = this.props;\r\n        return (\r\n            <div className=\"results\">\r\n                <ul>\r\n                    {\r\n                        (foundUsers && foundUsers.length > 0)\r\n                            ? (foundUsers.map(u => <li key={u._id}>\r\n                                <UserCard\r\n                                    imageId={u.imageId}\r\n                                    username={u.username}\r\n                                    firstName={u.firstName}\r\n                                    lastName={u.lastName}\r\n                                    id={u._id}\r\n                                />\r\n                            </li>\r\n                            ))\r\n                            : <p>No found users</p>\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        foundUsers: state.users.foundUsers\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(FoundPeopleList);","import React from 'react';\r\nimport FoundPeopleList from './FoundPeopleList';\r\nimport useForms from '../../../hooks/useForms';\r\nimport { connect } from 'react-redux';\r\nimport { searchUser } from '../../../store/fetcher/userFetcher';\r\nimport Loader from '../../Loader/Loader';\r\n\r\nfunction Discover({ search, fetchStatus }) {\r\n    const { handleSubmit, handleChangeInput, inputs } = useForms((e) => {\r\n        search(inputs);\r\n    })\r\n    \r\n    return (\r\n        <main>\r\n            <div>\r\n                <div className=\"search\">\r\n                    <h1>Discover more people</h1>\r\n                    <form id=\"searchForm\" onSubmit={handleSubmit}>\r\n                        <input \r\n                            type=\"search\" \r\n                            placeholder=\"Search...\" \r\n                            name=\"searchText\"\r\n                            value={inputs.searchText || ''}\r\n                            onChange={handleChangeInput}\r\n                        />\r\n                    </form>\r\n                </div>\r\n                {\r\n                    fetchStatus > 0 \r\n                        ? <Loader />\r\n                        : <FoundPeopleList />\r\n                }\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        fetchStatus: state.fetchStatus,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        search: (data) => dispatch(searchUser(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Discover);\r\n","import React from 'react';\r\nimport { editUserInfo } from '../../store/fetcher/userFetcher'\r\nimport { connect } from 'react-redux';\r\nimport useForms from '../../hooks/useForms';\r\nimport { wrapComponent } from 'react-snackbar-alert';\r\n\r\nfunction EditForm({ editInfo, createSnackbar }) {\r\n    const { handleSubmit, handleChangeInput, inputs } = useForms((e) => {\r\n        editInfo(inputs);\r\n        createSnackbar({\r\n            message: 'User info succesfully updated!',\r\n            timeout: 3000,\r\n        });\r\n    });\r\n\r\n    return (\r\n        <form className=\"editForm\" onSubmit={handleSubmit}>\r\n            <span>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username...\"\r\n                    id=\"username\"\r\n                    value={inputs.username || ''}\r\n                    onChange={handleChangeInput}\r\n                />\r\n            </span>\r\n            <span>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    placeholder=\"First Name...\"\r\n                    id=\"fistName\"\r\n                    value={inputs.firstName || ''}\r\n                    onChange={handleChangeInput}\r\n                />\r\n            </span>\r\n            <span>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"Last Name...\"\r\n                    id=\"lastName\"\r\n                    value={inputs.lastName || ''}\r\n                    onChange={handleChangeInput}\r\n                />\r\n            </span>\r\n            <input type=\"submit\" value=\"EDIT\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        editInfo: (data) => dispatch(editUserInfo(data))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(wrapComponent(EditForm));","import React from 'react';\r\nimport useForms from '../../hooks/useForms';\r\nimport { connect } from 'react-redux';\r\nimport { changePassword } from '../../store/fetcher/userFetcher'\r\nimport { wrapComponent } from 'react-snackbar-alert';\r\nimport { resetErrors } from '../../store/errors/actionsCreator';\r\n\r\nfunction ChangePasswordForm({ changePass, createSnackbar, errors, resetErr }) {\r\n    const { handleSubmit, handleChangeInput, inputs } = useForms(() => {\r\n\r\n\r\n\r\n        if (Object.values(inputs).length < 2) {\r\n            createSnackbar({\r\n                message: 'All fields are required!',\r\n                timeout: 3000,\r\n            });\r\n        } else {\r\n            changePass(inputs);\r\n            \r\n            createSnackbar({\r\n                message: 'Password is changed!',\r\n                timeout: 3000,\r\n            });\r\n\r\n            //clear all errors \r\n            resetErr();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <form className=\"editForm\" onSubmit={handleSubmit}>\r\n            {\r\n                (errors.length > 0 && (<p className=\"error\">{errors[errors.length - 1].message}</p>))\r\n            }\r\n            <span>\r\n                <i className=\"fas fa-key\" />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"oldPassword\"\r\n                    placeholder=\"Old password...\"\r\n                    value={inputs.oldPassword || ''}\r\n                    onChange={handleChangeInput}\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className=\"fas fa-lock\" />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"newPassword\"\r\n                    placeholder=\"New password...\"\r\n                    value={inputs.newPassword || ''}\r\n                    onChange={handleChangeInput}\r\n                />\r\n            </span>\r\n            <input type=\"submit\" value=\"CHANGE\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        changePass: (data) => dispatch(changePassword(data)),\r\n        resetErr: () => dispatch(resetErrors)\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        errors: state.errors\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(wrapComponent(ChangePasswordForm));","import React, { Component } from 'react';\r\nimport { changeUserPic } from '../../store/fetcher/userFetcher'\r\nimport { connect } from 'react-redux';\r\nimport config from '../../config/config';\r\nimport { wrapComponent } from 'react-snackbar-alert';\r\n\r\nclass EditForm extends Component {\r\n    state = {\r\n        imagePreviewUrl: '',\r\n        fd: new FormData()\r\n    }\r\n\r\n    handleChangeInput = (e) => {\r\n        const files = e.target.files;\r\n\r\n        if (files && files.length > 0) {\r\n            let reader = new FileReader();\r\n            let file = e.target.files[0];\r\n\r\n            this.state.fd.append(e.target.name, file, e.target.name);\r\n\r\n            reader.onloadend = () => {\r\n                this.setState({\r\n                    imagePreviewUrl: reader.result\r\n                });\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.changeProfilePic(this.state.fd);\r\n\r\n        this.props.createSnackbar({\r\n            message: 'Profile picture is changed!',\r\n            timeout: 3000,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"editForm\" encType=\"multipart/form-data\" onSubmit={this.handleSubmit}>\r\n                <figure>\r\n                    <img className=\"profileImg\" src={this.state.imagePreviewUrl || `${config.URI}/feed/image/${this.props.auth.imageId}`} alt=\"\" />\r\n                    <div className=\"uploadImage\">\r\n                        <label htmlFor=\"file\"><img className=\"icon\" src=\"https://cdn.iconscout.com/icon/free/png-256/gallery-44-267592.png\" alt=\"uploadImg\" />Change\r\n                      Profile Picture</label>\r\n                        <input type=\"file\" id=\"file\" name=\"avatar\" onChange={this.handleChangeInput} />\r\n                    </div>\r\n                </figure>\r\n                <input type=\"submit\" value=\"SAVE\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        changeProfilePic: (data) => dispatch(changeUserPic(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(wrapComponent(EditForm));","import React, { Component } from 'react';\r\nimport EditUserInfoForm from '../../Forms/EditUserInfoForm';\r\nimport ChangePasswordForm from '../../Forms/ChangePasswordForm';\r\nimport EditProfilePicForm from '../../Forms/EditProfilePicForm';\r\n\r\nclass EditUserInfo extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <div className=\"editUserInfo\">\r\n                    <EditProfilePicForm />\r\n                    <h3>Change your personal information</h3>\r\n                    <EditUserInfoForm />\r\n                    <h3>Change your password</h3>\r\n                    <ChangePasswordForm />\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserInfo;","import React from 'react';\r\n\r\nfunction NotFound(props) {\r\n    return (\r\n        <main>\r\n            <div className=\"message\">\r\n                <p>\r\n                    WE ARE SORRY!!! THE PAGE YOU ARE LOOKING FOR DOES NOT EXIST!!! :(\r\n                </p>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React, { useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faKey } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport useForms from '../../hooks/useForms';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../store/fetcher/authFetcher';\r\nimport { wrapComponent } from 'react-snackbar-alert';\r\nimport { resetErrors } from '../../store/errors/actionsCreator';\r\n\r\nfunction LoginForm({ login, errors, createSnackbar, resetErr }) {\r\n    const { handleSubmit, handleChangeInput, inputs } = useForms((e) => {\r\n\r\n        // if fields are less, send message to user that they are required\r\n        if (Object.values(inputs).length < 2) {\r\n            createSnackbar({\r\n                message: 'All fields are required!',\r\n                timeout: 3000,\r\n            })\r\n        } else {\r\n            login(inputs);\r\n\r\n            //clear all errors \r\n            resetErr();\r\n        }\r\n    });\r\n\r\n    //clear all errors after component unmount, so the same errors not showing up on another component\r\n    useEffect(() => {\r\n        return () => {\r\n            resetErr();\r\n        }\r\n    }, [resetErr]);\r\n\r\n    return (\r\n        <main>\r\n            <form id=\"loginForm\" onSubmit={handleSubmit}>\r\n                <h1>SIGN IN</h1>\r\n                {\r\n                    (errors.length > 0 && (<p className=\"error\">{errors[errors.length - 1].message}</p>))\r\n                }\r\n                <span>\r\n                    <FontAwesomeIcon icon={faEnvelope} />\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email...\"\r\n                        id=\"email\"\r\n                        value={inputs.email || ''}\r\n                        onChange={handleChangeInput}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <FontAwesomeIcon icon={faKey} />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password...\"\r\n                        id=\"password\"\r\n                        value={inputs.password || ''}\r\n                        onChange={handleChangeInput}\r\n                    />\r\n                </span>\r\n                <input type=\"submit\" defaultValue=\"SIGN IN\" />\r\n            </form>\r\n            <div className=\"message\">\r\n                <span>You are not signed up yet?</span> <Link to=\"/signup\">SIGN UP</Link>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        login: (data) => dispatch(loginUser(data)),\r\n        resetErr: () => dispatch(resetErrors())\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        errors: state.errors\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(wrapComponent(LoginForm));","import * as authActions from '../auth/actionsCreator';\r\nimport * as errorsActions from '../errors/actionsCreator';\r\nimport config from '../../config/config';\r\n\r\nexport function registerUser(userData) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await fetch(`${config.URI}/auth/signup`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n            });\r\n\r\n            const registerData = await res.json();\r\n\r\n            //if server returns errors from express-validator - distpach them\r\n            if (registerData.errors) {\r\n                dispatch(errorsActions.fetchError(registerData.errors));\r\n            } else {\r\n                //after succesfully register - logged in user\r\n                const res = await fetch(`${config.URI}/auth/signin`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(userData)\r\n                });\r\n    \r\n                const data = await res.json();\r\n\r\n                if(data.errors) {\r\n                    dispatch(errorsActions.fetchError(data.errors));\r\n                } else {\r\n                    //set some of user info to local storage\r\n                    localStorage.setItem('username', data.user.username);\r\n                    localStorage.setItem('token', data.token);\r\n                    localStorage.setItem('userId', data.user._id);\r\n                    localStorage.setItem('role', data.user.roles);                \r\n                    dispatch(authActions.registerUser(data.user));\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function loginUser(userData) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await fetch(`${config.URI}/auth/signin`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            //check if server returns error about logging \r\n            if (data.error) {\r\n                dispatch(errorsActions.fetchError(data));\r\n            } else {\r\n                //set some of user info to local storage\r\n                localStorage.setItem('username', data.user.username);\r\n                localStorage.setItem('userId', data.user._id);\r\n                localStorage.setItem('role', data.user.roles);                \r\n                localStorage.setItem('token', data.token);\r\n                dispatch(authActions.loginUser(data.user));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faUserAlt, faUserCircle, faEnvelope, faKey } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport useForms from '../../hooks/useForms';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from '../../store/fetcher/authFetcher';\r\nimport { resetErrors } from '../../store/errors/actionsCreator';\r\nimport { wrapComponent } from 'react-snackbar-alert';\r\n\r\nfunction RegisterForm({ register, errors, createSnackbar, resetErr }) {\r\n    const { handleSubmit, handleChangeInput, inputs } = useForms((e) => {\r\n\r\n        // if fields are less, send message to user that they are required\r\n        if (Object.values(inputs).length < 5) {\r\n            createSnackbar({\r\n                message: 'All fields are required!',\r\n                timeout: 3000,\r\n            })\r\n        } else {\r\n            register(inputs);\r\n\r\n            //clear all errors \r\n            resetErr();\r\n        }\r\n    }, true);\r\n\r\n    //clear all errors after component unmount, so the same errors not showing up on another component\r\n    useEffect(() => {\r\n        return () => {\r\n            resetErr();\r\n        }\r\n    }, [resetErr]);\r\n\r\n    return (\r\n        <main>\r\n            <form id=\"registerForm\" onSubmit={handleSubmit}>\r\n                <h1>SIGN UP</h1>\r\n                {\r\n                    (errors.length > 0 && (<p className=\"error\">{errors[errors.length - 1].msg}</p>))\r\n                }\r\n                <span>\r\n\r\n                    <FontAwesomeIcon icon={faUserCircle} />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"Username...\"\r\n                        id=\"username\"\r\n                        onChange={handleChangeInput}\r\n                        value={inputs.username || ''}\r\n                    />\r\n\r\n                </span>\r\n                <span>\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        placeholder=\"First Name...\"\r\n                        id=\"firstName\"\r\n                        onChange={handleChangeInput}\r\n                        value={inputs.firstName || ''}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <FontAwesomeIcon icon={faUserAlt} />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        placeholder=\"Last Name...\"\r\n                        id=\"lastName\"\r\n                        onChange={handleChangeInput}\r\n                        value={inputs.lastName || ''}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <FontAwesomeIcon icon={faEnvelope} />\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email...\"\r\n                        id=\"email\"\r\n                        onChange={handleChangeInput}\r\n                        value={inputs.email || ''}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <FontAwesomeIcon icon={faKey} />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password...\"\r\n                        id=\"pass\"\r\n                        onChange={handleChangeInput}\r\n                        value={inputs.password || ''}\r\n                    />\r\n                </span>\r\n                <input type=\"submit\" defaultValue=\"SIGN UP\" />\r\n            </form>\r\n            <div className=\"message\">\r\n                <span>You are already sign in?</span> <Link to=\"/signin\">SIGN IN</Link>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        register: (data) => dispatch(registerUser(data)),\r\n        resetErr: () => dispatch(resetErrors())\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        errors: state.errors\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(wrapComponent(RegisterForm));","import React, { useState } from 'react';\r\nimport MakePostDiv from '../../PostComponents/MakePostDiv';\r\nimport Loader from '../../Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PostsSection from '../../PostComponents/PostsSection';\r\nimport Modal from '../../Modals/Modal';\r\nimport config from '../../../config/config';\r\n\r\nfunction Me(props) {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalHeaderName, setModalHeaderName] = useState('');\r\n    \r\n    //followers and subscriptions\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const handleShow = (e) => {\r\n        e.persist();\r\n\r\n        setShowModal((showModal) => true);\r\n        setModalHeaderName(() => e.target.name);\r\n        setUsers(() => props.auth[e.target.id]);\r\n    }\r\n\r\n    const handleClose = (e) => {\r\n        e.persist();\r\n\r\n        setShowModal((showModal) => false)\r\n    }\r\n\r\n    const { imageId, subscriptions, followers, username, _id } = props.auth;\r\n    const { fetchStatus, userPosts } = props;\r\n   \r\n    return (\r\n        <main>\r\n            <div className=\"userInfoHeader\">\r\n                <Link to={\"/profile/\" + _id}>\r\n                    <figure className=\"profilePic\">\r\n                        <img src={`${config.URI}/feed/image/${imageId}`} alt=\"\" />\r\n                        <figcaption>{username}</figcaption>\r\n                    </figure>\r\n                </Link>\r\n                <div className=\"headerInfoContainer\">\r\n                    <div className=\"userMeta\">\r\n                        <span>{userPosts.length} posts</span>\r\n                        <span><button name=\"Followers\" id=\"followers\" onClick={handleShow}>{followers.length} followers</button></span>\r\n                        <span><button name=\"Subscriptions\" id=\"subscriptions\" onClick={handleShow}>{subscriptions.length} following</button></span>\r\n                    </div>\r\n                    <Link to=\"/edit\" className=\"editBtn\">EDIT PROFILE</Link>\r\n                </div>\r\n            </div>\r\n            <MakePostDiv />\r\n\r\n            {/* Showing loader when fetching posts */}\r\n            {\r\n                fetchStatus > 0\r\n                    ? <Loader />\r\n                    : <PostsSection posts={userPosts} />\r\n            }\r\n\r\n            {/* Modal for followers or following users */}\r\n            {\r\n                showModal ? <Modal handleClose={handleClose} modalHeaderName={modalHeaderName} users={users} /> : null\r\n            }\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        userPosts: state.userPosts,\r\n        fetchStatus: state.fetchStatus\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Me);\r\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport Header from './components/App/common/Header/Header';\nimport Footer from './components/App/common/Footer/Footer';\nimport Home from './components/App/Home/Home';\nimport UserProfile from './components/App/UserProfile/UserProfile';\nimport Discover from './components/App/Discover/Discover';\nimport EditUserInfo from './components/App/Edit/EditUserInfo';\nimport NotFound from './components/App/NotFound/NotFound';\nimport LoginForm from './components/Forms/LoginForm';\nimport RegisterForm from './components/Forms/RegisterForm';\nimport Me from './components/App/Me/Me';\n\nimport { getUserPosts, getAllSubsPosts } from './store/fetcher/postFetcher';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"wrapper\">\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact render={() => localStorage.getItem('username') ? <Home /> : <LoginForm />} />\n          <Route path=\"/profile/:userId\" {...this.props} render={(props) => localStorage.getItem('username') ? <UserProfile {...props} /> : <LoginForm />} />\n          <Route path=\"/me\" render={() => localStorage.getItem('username') ? <Me /> : <LoginForm />} />\n          <Route path=\"/discover\" render={() => localStorage.getItem('username') ? <Discover /> : <LoginForm />} />\n          <Route path=\"/edit\" render={() => localStorage.getItem('username') ? <EditUserInfo /> : <LoginForm />} />\n          <Route path=\"/signin\" render={() => localStorage.getItem('username') ? <Home /> : <LoginForm />} />\n          <Route path=\"/signup\" render={() => localStorage.getItem('username') ? <Home /> : <RegisterForm />} />\n          <Route component={NotFound} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n      this.props.getSubsPosts();\n      this.props.getUserPosts(localStorage.getItem('userId'));\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUserPosts: (id) => dispatch(getUserPosts(id)),\n    getSubsPosts: () => dispatch(getAllSubsPosts())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport auth from './auth/authReducer';\r\nimport posts from './posts/postsReducer';\r\nimport userPosts from './userPosts/userPostsReducer';\r\nimport users from './users/usersReducer';\r\nimport errors from './errors/errorsReducer';\r\nimport user from './user/userReducer';\r\nimport fetchStatus from './fetchStatus/statusReducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n    whitelist: ['auth']\r\n}\r\n\r\nconst myPersistReducer = persistReducer(persistConfig, combineReducers({ auth, userPosts, users, user, posts, fetchStatus, errors }));\r\n\r\nexport default () => {\r\n    let store = createStore(myPersistReducer, applyMiddleware(thunk));\r\n    let persistor = persistStore(store);\r\n\r\n    return { store, persistor }\r\n} \r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport default function auth(oldState = {}, action) {\r\n    let newState = {};\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN:\r\n        case actionTypes.REGISTER:\r\n        case actionTypes.FOLLOW_USER:\r\n        case actionTypes.UNFOLLOW_USER:\r\n        case actionTypes.EDIT:\r\n            newState = Object.assign({}, oldState, action.data)\r\n            return newState\r\n        case actionTypes.LOGOUT:\r\n            newState = {};\r\n            localStorage.clear();\r\n            return newState;\r\n        default:\r\n            return oldState;\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport default function posts(oldState = [], action) {\r\n    let newState = {};\r\n    switch (action.type) {\r\n        case actionTypes.GET_USER_POSTS:\r\n        case actionTypes.EDIT:\r\n        case actionTypes.DELETE_POST:\r\n            return action.data;\r\n        case actionTypes.MAKE_POST:\r\n            newState = [...oldState, action.data];\r\n            return newState;\r\n        case actionTypes.DELETE_COMMENT:\r\n        case actionTypes.EDIT_COMMENT:\r\n        case actionTypes.COMMENT_POST:\r\n        case actionTypes.EDIT_POST:\r\n            const indexOfChangedPost = oldState.findIndex(obj => obj._id === action.data._id);\r\n\r\n            if (indexOfChangedPost !== -1) {\r\n                newState = [...oldState];\r\n\r\n                newState[indexOfChangedPost] = action.data;\r\n                return newState;\r\n            }\r\n\r\n            return oldState;\r\n        case actionTypes.RESET_POSTS:\r\n            return []\r\n        default:\r\n            return oldState;\r\n    }\r\n}\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport default function users(oldState = [], action) {\r\n    let newState = [];\r\n    switch (action.type) {\r\n        case actionTypes.SEARCH:\r\n            newState = action.data;\r\n            return newState;\r\n        default:\r\n            return oldState;\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport default function users(oldState = {}, action) {\r\n    let newState = {};\r\n    switch (action.type) {\r\n        case actionTypes.FOLLOW:\r\n        case actionTypes.UNFOLLOW:\r\n            newState = Object.assign({}, oldState, action.data)\r\n            return newState\r\n        case actionTypes.GET_USER_DATA:\r\n            newState = action.data;\r\n            return newState;\r\n        case actionTypes.COMMENT_USER_POST:\r\n            newState = { ...oldState };\r\n\r\n            const indexOfChangedPost = oldState.posts.findIndex(p => p._id === action.data._id);\r\n\r\n            if (indexOfChangedPost !== -1) {\r\n                newState.posts[indexOfChangedPost] = action.data;\r\n                return newState;\r\n            }\r\n\r\n            return oldState;\r\n        default:\r\n            return oldState;\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport default function posts(oldState = [], action) {\r\n    let newState = [];\r\n    switch (action.type) {\r\n        case actionTypes.GET_USER_SUBS_POSTS:\r\n            if (action.data) {\r\n                newState = [...oldState, ...action.data];\r\n                return newState;\r\n            }\r\n\r\n            return oldState\r\n        case actionTypes.DELETE_COMMENT:\r\n        case actionTypes.EDIT_COMMENT:\r\n        case actionTypes.COMMENT_POST:\r\n            const indexOfChangedPost = oldState.findIndex(obj => obj._id === action.data._id);\r\n\r\n            if (indexOfChangedPost !== -1) {\r\n                newState = [...oldState];\r\n\r\n                newState[indexOfChangedPost] = action.data;\r\n                return newState;\r\n            }\r\n\r\n            return oldState;\r\n       \r\n        default:\r\n            return oldState;\r\n    }\r\n}","import * as actionsTypes from './actionTypes';\r\n\r\nexport default function fetchStatus(oldState = 0, action) {\r\n    switch (action.type) {\r\n        case actionsTypes.FETCH_BEGIN:\r\n            return oldState + 1;\r\n        case actionsTypes.FETCH_ERROR:\r\n        case actionsTypes.FETCH_DATA:\r\n            return oldState - 1;\r\n        default:\r\n            return oldState\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport default function errors(oldState = [], action) {\r\n    switch (action.type) {\r\n        case actionTypes.ERROR:\r\n\r\n            //chek if dispatched data is a single error or is array of errors\r\n            if(Array.isArray(action.data)) {\r\n                return action.data;\r\n            } else {\r\n                return [...oldState, action.data];\r\n            }\r\n        case actionTypes.RESET_ERRORS:\r\n            return [];\r\n        default:\r\n            return oldState;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storeCongig from './store/store';\nimport { SnackbarProvider } from 'react-snackbar-alert';\n\nconst { persistor, store } = storeCongig();\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <SnackbarProvider>\n                    <App />\n                </SnackbarProvider>\n            </PersistGate>\n        </Provider>\n    </Router>\n    , document.getElementById('root'));"],"sourceRoot":""}